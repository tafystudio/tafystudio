[
    {
        "id": "f1",
        "type": "tab",
        "label": "Camera Dashboard",
        "disabled": false,
        "info": "Example flow showing Tafy camera integration"
    },
    {
        "id": "inject1",
        "type": "inject",
        "z": "f1",
        "name": "Start Discovery",
        "props": [{"p":"payload"}],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "discover",
        "payloadType": "str",
        "x": 150,
        "y": 100,
        "wires": [["discovery1"]]
    },
    {
        "id": "discovery1",
        "type": "tafy-camera-discovery",
        "z": "f1",
        "name": "Find Cameras",
        "discoveryUrl": "http://localhost:8080",
        "autoDiscover": false,
        "discoveryInterval": 30000,
        "outputFormat": "full",
        "x": 350,
        "y": 100,
        "wires": [["debug1", "function1"]]
    },
    {
        "id": "debug1",
        "type": "debug",
        "z": "f1",
        "name": "Discovery Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "function1",
        "type": "function",
        "z": "f1",
        "name": "Select Best Camera",
        "func": "// Find camera with MJPEG support\nconst cameras = msg.payload.cameras || [];\nconst best = cameras.find(cam => \n    cam.formats && cam.formats.some(f => \n        f.name && f.name.includes('MJPEG')\n    )\n) || cameras[0];\n\nif (best) {\n    flow.set('selectedCamera', best.device);\n    node.status({fill:'green', shape:'dot', text:best.name});\n    return { payload: best };\n} else {\n    node.status({fill:'red', shape:'ring', text:'No camera found'});\n    return null;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 100,
        "wires": [["stream1", "control1"]]
    },
    {
        "id": "stream1",
        "type": "tafy-camera-stream",
        "z": "f1",
        "name": "MJPEG Stream",
        "cameraUrl": "http://localhost:8080",
        "streamType": "mjpeg",
        "autoConnect": true,
        "autoReconnect": true,
        "reconnectInterval": 5000,
        "x": 350,
        "y": 200,
        "wires": [["template1", "debug2"]]
    },
    {
        "id": "template1",
        "type": "template",
        "z": "f1",
        "name": "Stream HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<div style=\"text-align:center;\">\n    <h3>Camera Stream</h3>\n    <img src=\"{{payload.url}}\" style=\"max-width:100%; height:auto;\" />\n    <p>{{payload.camera}}</p>\n</div>",
        "output": "str",
        "x": 560,
        "y": 200,
        "wires": [["ui_template1"]]
    },
    {
        "id": "ui_template1",
        "type": "ui_template",
        "z": "f1",
        "group": "",
        "name": "Camera View",
        "order": 1,
        "width": "12",
        "height": "8",
        "format": "{{msg.payload}}",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 760,
        "y": 200,
        "wires": [[]]
    },
    {
        "id": "button1",
        "type": "ui_button",
        "z": "f1",
        "name": "Take Snapshot",
        "group": "",
        "order": 2,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Take Snapshot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "camera",
        "payload": "snapshot",
        "payloadType": "str",
        "topic": "",
        "x": 140,
        "y": 300,
        "wires": [["snapshot1"]]
    },
    {
        "id": "snapshot1",
        "type": "tafy-camera-snapshot",
        "z": "f1",
        "name": "Capture",
        "cameraUrl": "http://localhost:8080",
        "outputType": "base64",
        "includeMetadata": true,
        "x": 340,
        "y": 300,
        "wires": [["template2", "file1"]]
    },
    {
        "id": "template2",
        "type": "template",
        "z": "f1",
        "name": "Snapshot HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<div style=\"text-align:center;\">\n    <h3>Snapshot</h3>\n    <img src=\"data:image/jpeg;base64,{{payload}}\" style=\"max-width:100%; height:auto;\" />\n    <p>Taken at: {{metadata.timestamp}}</p>\n</div>",
        "output": "str",
        "x": 560,
        "y": 300,
        "wires": [["ui_template2"]]
    },
    {
        "id": "ui_template2",
        "type": "ui_template",
        "z": "f1",
        "group": "",
        "name": "Snapshot View",
        "order": 3,
        "width": "6",
        "height": "6",
        "format": "{{msg.payload}}",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 760,
        "y": 300,
        "wires": [[]]
    },
    {
        "id": "file1",
        "type": "function",
        "z": "f1",
        "name": "Save Snapshot",
        "func": "// Convert base64 to buffer for file saving\nconst buffer = Buffer.from(msg.payload, 'base64');\nconst timestamp = new Date().toISOString().replace(/:/g, '-');\nconst filename = `/data/snapshots/camera-${timestamp}.jpg`;\n\nreturn {\n    payload: buffer,\n    filename: filename\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 340,
        "wires": [["debug3"]]
    },
    {
        "id": "control1",
        "type": "tafy-camera-control",
        "z": "f1",
        "name": "Get Status",
        "cameraUrl": "http://localhost:8080",
        "defaultCommand": "status",
        "x": 350,
        "y": 400,
        "wires": [["debug4", "chart1"]]
    },
    {
        "id": "inject2",
        "type": "inject",
        "z": "f1",
        "name": "Status Timer",
        "props": [{"p":"payload"}],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "status",
        "payloadType": "str",
        "x": 150,
        "y": 400,
        "wires": [["control1"]]
    },
    {
        "id": "chart1",
        "type": "function",
        "z": "f1",
        "name": "Format for Chart",
        "func": "// Extract FPS for charting\nif (msg.payload && msg.payload.fps) {\n    return {\n        payload: msg.payload.fps,\n        topic: 'FPS'\n    };\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 400,
        "wires": [["ui_chart1"]]
    },
    {
        "id": "ui_chart1",
        "type": "ui_chart",
        "z": "f1",
        "name": "FPS Chart",
        "group": "",
        "order": 4,
        "width": "6",
        "height": "4",
        "label": "Camera FPS",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "60",
        "removeOlder": "5",
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "colors": ["#1f77b4"],
        "x": 750,
        "y": 400,
        "wires": [[],[]]
    },
    {
        "id": "debug2",
        "type": "debug",
        "z": "f1",
        "name": "Stream Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 160,
        "wires": []
    },
    {
        "id": "debug3",
        "type": "debug",
        "z": "f1",
        "name": "File Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "filename",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 340,
        "wires": []
    },
    {
        "id": "debug4",
        "type": "debug",
        "z": "f1",
        "name": "Status Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 440,
        "wires": []
    }
]