name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          
      - name: Get version
        id: version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          configuration: ".github/changelog-config.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

  build-release:
    name: Build Release Images
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        include:
          - app: hub-ui
            context: ./apps/hub-ui
          - app: hub-api
            context: ./apps/hub-api
          - app: tafyd
            context: ./apps/tafyd
    
    steps:
      - uses: actions/checkout@v5
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/${{ matrix.app }}
            tafystudio/${{ matrix.app }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Sign container images
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: |
          for tag in ${{ steps.meta.outputs.tags }}; do
            cosign sign --yes $tag
          done

  generate-sbom:
    name: Generate SBOM
    runs-on: ubuntu-latest
    needs: build-release
    strategy:
      matrix:
        app: [hub-ui, hub-api, tafyd]
    
    steps:
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0
        
      - name: Generate SBOM
        run: |
          syft ghcr.io/${{ github.repository }}/${{ matrix.app }}:${{ needs.release.outputs.version }} \
            -o spdx-json > ${{ matrix.app }}-sbom.spdx.json
            
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ matrix.app }}
          path: ${{ matrix.app }}-sbom.spdx.json